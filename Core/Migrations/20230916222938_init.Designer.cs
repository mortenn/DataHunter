// <auto-generated />
using DataHunter.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Core.Migrations
{
    [DbContext(typeof(DataHunterDbContext))]
    [Migration("20230916222938_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("DataHunter.Data.DirectoryMetadata", b =>
                {
                    b.Property<string>("Drive")
                        .HasColumnType("TEXT");

                    b.Property<string>("Parent")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<long>("FileBytes")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Left")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Right")
                        .HasColumnType("INTEGER");

                    b.HasKey("Drive", "Parent", "Name");

                    b.HasIndex("Drive")
                        .HasDatabaseName("IX_Drive");

                    b.HasIndex("Left")
                        .HasDatabaseName("IX_Left");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Name");

                    b.HasIndex("Parent")
                        .HasDatabaseName("IX_Parent");

                    b.HasIndex("Right")
                        .HasDatabaseName("IX_Right");

                    b.ToTable("DirectoryMetadata");
                });
#pragma warning restore 612, 618
        }
    }
}
